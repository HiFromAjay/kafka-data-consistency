@startuml

skinparam componentStyle uml2

database Mysql
cloud "Kafka\nCLAIM_CREATE_DB"
cloud "Kafka\nCLAIM_CREATED"
cloud "Kafka\nTASK_CREATE"
cloud "Kafka\nTASK_CREATED"
actor User

note "The user clicks to save a claim. \n \n 1. The claim is sent to the Claims component (1.1). \n There a decision is made to create a task, which is \n validated (1.2) before committing two records to \n Kafka in one transaction (1.3 the claim to be \n persisted; 1.4 the task to be persisted). \n  \n 2. The claim is saved by the claims component \n (2.1, 2.2) and that fact is sent as an event to the \n browser so that it can update the relevant portion \n of the UI (2.3-5). \n \n 3. The same happens for the task (3.1-5)." as N

User --> [Browser] : create
[Browser] --> [Claims] : 1.1
[Claims] --> [Tasks] : 1.2\nvalidate
[Claims] --> [Kafka\nCLAIM_CREATE_DB] : 1.3
[Claims] --> [Kafka\nTASK_CREATE] : 1.4

[Kafka\nCLAIM_CREATE_DB] --> [Claims] : 2.1
[Claims] --> [Mysql] : 2.2
[Claims] --> [Kafka\nCLAIM_CREATED] : 2.3
[Kafka\nCLAIM_CREATED] --> [Web] : 2.4
[Web] --> [Browser] : 2.5\nRefresh

[Kafka\nTASK_CREATE] --> [Tasks] : 3.1
[Tasks] --> [Mysql] : 3.2
[Tasks] --> [Kafka\nTASK_CREATED] : 3.3
[Kafka\nTASK_CREATED] --> [Web] : 3.4
[Web] --> [Browser] : 3.5\nRefresh

@enduml
