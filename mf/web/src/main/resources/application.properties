quarkus.http.port=8082
%test.quarkus.http.test-port=39082

quarkus.smallrye-openapi.path=/swagger
quarkus.swagger-ui.always-include=true

quarkus.hibernate-validator.method-validation.allow-overriding-parameter-constraints=true

kafka.bootstrap.servers=maxant.ch:30001,maxant.ch:30002

mp.messaging.incoming.event-bus-in.connector=smallrye-kafka
mp.messaging.incoming.event-bus-in.topic=event-bus
mp.messaging.incoming.event-bus-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# TODO the following one really needs a unique ID per pod, as we dont know which
#      container will be serving the browser which needs to receive the incoming event
mp.messaging.incoming.event-bus-in.group.id=mf-web

mp.messaging.incoming.errors-in.connector=smallrye-kafka
mp.messaging.incoming.errors-in.topic=errors
mp.messaging.incoming.errors-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.errors-in.group.id=mf-web

mp.messaging.incoming.cases-in.connector=smallrye-kafka
mp.messaging.incoming.cases-in.topic=cases-events
mp.messaging.incoming.cases-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.cases-in.group.id=mf-web

mp.messaging.outgoing.errors-out.connector=smallrye-kafka
mp.messaging.outgoing.errors-out.topic=errors
mp.messaging.outgoing.errors-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) [requestId:%X{requestId} c:%X{command} e:%X{event}] %s%e%n
